filename: ./557.xz_r/xz_r.wasm
  benchmark: 557.xz_r
  binary:    xz_r.wasm

Functions:       250
  Imported:       10
  Non-imported:  240
  Exported:        5

Tables: 1 (should be 1 in Wasm v1)
  Table entries at init:       100
  Of those, unique functions:   98 (i.e., at least 39.20% of all functions can be called indirectly, because they are in the [indirect call] table)

Instructions:     53283
  call:             577 (1.08% of all instructions)
  call_indirect:     71 (0.13% of all, 10.96% of all calls)

Globals:
  #0 i32
     init: i32.const 5279152
      57 × global.get   108 × global.set   165 total (35/65% split)

Likely the stack pointer:       Global #0
Functions using stack pointer:   57 (23.75% of all non-imported functions)
Stack increments: (How many functions increment the stack pointer by how much? Can also handle multiple increments per function, that's why it is an array of increments.)
    1  (0.42%) × [-2272]
    1  (0.42%) × [-2192]
    1  (0.42%) × [-704]
    1  (0.42%) × [-272]
    1  (0.42%) × [-256]
    1  (0.42%) × [-112]
    2  (0.83%) × [-144]
    2  (0.83%) × [-48]
    3  (1.25%) × [-208]
    3  (1.25%) × [-96]
    3  (1.25%) × [-80]
    3  (1.25%) × [-64]
    5  (2.08%) × [-32]
   26 (10.83%) × [-16]
  187 (77.92%) × []
  functions with stack allocation total: 53 (22.08%)

csv lines to extract for sp analysis and plots:
benchmark,binary,funccount,percent,sp_increments,increment_sum,increment_sum_abs
sp_csv_line:"557.xz_r","xz_r.wasm",1,0.41666666,"[-2272]",-2272,2272
sp_csv_line:"557.xz_r","xz_r.wasm",1,0.41666666,"[-2192]",-2192,2192
sp_csv_line:"557.xz_r","xz_r.wasm",1,0.41666666,"[-704]",-704,704
sp_csv_line:"557.xz_r","xz_r.wasm",1,0.41666666,"[-272]",-272,272
sp_csv_line:"557.xz_r","xz_r.wasm",1,0.41666666,"[-256]",-256,256
sp_csv_line:"557.xz_r","xz_r.wasm",1,0.41666666,"[-112]",-112,112
sp_csv_line:"557.xz_r","xz_r.wasm",2,0.8333333,"[-144]",-144,144
sp_csv_line:"557.xz_r","xz_r.wasm",2,0.8333333,"[-48]",-48,48
sp_csv_line:"557.xz_r","xz_r.wasm",3,1.25,"[-208]",-208,208
sp_csv_line:"557.xz_r","xz_r.wasm",3,1.25,"[-96]",-96,96
sp_csv_line:"557.xz_r","xz_r.wasm",3,1.25,"[-80]",-80,80
sp_csv_line:"557.xz_r","xz_r.wasm",3,1.25,"[-64]",-64,64
sp_csv_line:"557.xz_r","xz_r.wasm",5,2.0833333,"[-32]",-32,32
sp_csv_line:"557.xz_r","xz_r.wasm",26,10.833333,"[-16]",-16,16
sp_csv_line:"557.xz_r","xz_r.wasm",187,77.916664,"[]",0,0

Counts of function types (29 unique types):
    1  (0.40%) × [i32, i32, i32] -> [i64]
    1  (0.40%) × [i32, i32, i32, i32] -> [i64]
    1  (0.40%) × [i32, i32, i32, i32, i32, i32, i32, i32] -> [i32]
    1  (0.40%) × [i32, i32, i32, i64] -> [i32]
    1  (0.40%) × [i32, i32, i64] -> [i64]
    1  (0.40%) × [i32, i32, i64, i64] -> [i32]
    1  (0.40%) × [i32, i64] -> []
    1  (0.40%) × [i32, i64, i64] -> [i32]
    1  (0.40%) × [i64, i32, i32] -> [i32]
    1  (0.40%) × [i64, i32, i32, i32, i32] -> [i32]
    2  (0.80%) × [] -> [i32]
    2  (0.80%) × [i32, i32, i32, i32, i32, i32] -> [i32]
    2  (0.80%) × [i32, i32, i64, i32] -> [i32]
    2  (0.80%) × [i32, i64, i32] -> [i64]
    2  (0.80%) × [i64, i32] -> [i32]
    3  (1.20%) × [i32, i32, i32, i32] -> []
    3  (1.20%) × [i32, i32, i32, i32, i32] -> []
    3  (1.20%) × [i64] -> [i32]
    4  (1.60%) × [] -> []
   10  (4.00%) × [i32] -> [i64]
   10  (4.00%) × [i32, i32, i32, i32, i32, i32, i32, i32, i32] -> [i32]
   11  (4.40%) × [i32, i32, i32] -> []
   15  (6.00%) × [i32] -> []
   15  (6.00%) × [i32, i32, i32, i32, i32] -> [i32]
   23  (9.20%) × [i32, i32, i32, i32] -> [i32]
   24  (9.60%) × [i32] -> [i32]
   34 (13.60%) × [i32, i32] -> []
   36 (14.40%) × [i32, i32, i32] -> [i32]
   39 (15.60%) × [i32, i32] -> [i32]

Functions with at least one call_indirect: 44 (18.33% of all functions)

Table elements initialization:
         range: [    1,    1]   length:   1   unique funcs:    1   type: [i32, i32] -> []
         range: [    2,    2]   length:   1   unique funcs:    1   type: [i32, i32, i32] -> [i32]
         range: [    3,    3]   length:   1   unique funcs:    1   type: [i32, i32, i32, i32] -> [i32]
         range: [    4,    4]   length:   1   unique funcs:    1   type: [i32, i32] -> []
         range: [    5,    5]   length:   1   unique funcs:    1   type: [i32, i32, i32, i32, i32, i32, i32, i32, i32] -> [i32]
         range: [    6,    6]   length:   1   unique funcs:    1   type: [i64] -> [i32]
         range: [    7,    7]   length:   1   unique funcs:    1   type: [i32, i32, i32] -> [i32]
         range: [    8,    8]   length:   1   unique funcs:    1   type: [i32] -> [i64]
         range: [    9,    9]   length:   1   unique funcs:    1   type: [i32, i32] -> [i32]
         range: [   10,   10]   length:   1   unique funcs:    1   type: [i32, i32, i32] -> [i32]
         range: [   11,   11]   length:   1   unique funcs:    1   type: [i32] -> [i64]
         range: [   12,   12]   length:   1   unique funcs:    1   type: [i32, i32] -> [i32]
         range: [   13,   13]   length:   1   unique funcs:    1   type: [i32, i32, i32] -> [i32]
         range: [   14,   15]   length:   2   unique funcs:    2   type: [i32, i32] -> [i32]
         range: [   16,   21]   length:   6   unique funcs:    6   type: [i32, i32, i32] -> [i32]
         range: [   22,   22]   length:   1   unique funcs:    1   type: [i32] -> [i64]
         range: [   23,   23]   length:   1   unique funcs:    1   type: [i32, i32] -> [i32]
         range: [   24,   24]   length:   1   unique funcs:    1   type: [i32, i32, i32] -> [i32]
         range: [   25,   25]   length:   1   unique funcs:    1   type: [i32, i32] -> []
         range: [   26,   26]   length:   1   unique funcs:    1   type: [i32, i32, i32, i32, i32, i32, i32, i32, i32] -> [i32]
         range: [   27,   28]   length:   2   unique funcs:    2   type: [i32, i32, i32, i32] -> [i32]
         range: [   29,   29]   length:   1   unique funcs:    1   type: [i32, i32] -> []
         range: [   30,   30]   length:   1   unique funcs:    1   type: [i32, i32, i32, i32, i32, i32, i32, i32, i32] -> [i32]
         range: [   31,   31]   length:   1   unique funcs:    1   type: [i32, i32, i32] -> [i32]
         range: [   32,   32]   length:   1   unique funcs:    1   type: [i32, i32] -> []
         range: [   33,   33]   length:   1   unique funcs:    1   type: [i32, i32, i32, i32, i32, i32, i32, i32, i32] -> [i32]
         range: [   34,   34]   length:   1   unique funcs:    1   type: [i64] -> [i32]
         range: [   35,   35]   length:   1   unique funcs:    1   type: [i32, i32, i32] -> [i32]
         range: [   36,   36]   length:   1   unique funcs:    1   type: [i32] -> [i64]
         range: [   37,   37]   length:   1   unique funcs:    1   type: [i32, i32, i32, i32] -> [i32]
         range: [   38,   38]   length:   1   unique funcs:    1   type: [i32, i32, i32] -> [i32]
         range: [   39,   39]   length:   1   unique funcs:    1   type: [i32] -> [i64]
         range: [   40,   40]   length:   1   unique funcs:    1   type: [i32, i32, i32, i32] -> [i32]
         range: [   41,   41]   length:   1   unique funcs:    1   type: [i32, i32, i32] -> [i32]
         range: [   42,   42]   length:   1   unique funcs:    1   type: [i32, i32, i32, i32] -> [i32]
         range: [   43,   48]   length:   6   unique funcs:    6   type: [i32, i32, i32] -> [i32]
         range: [   49,   49]   length:   1   unique funcs:    1   type: [i32, i32, i32, i32] -> [i32]
         range: [   50,   50]   length:   1   unique funcs:    1   type: [i32, i32, i64, i32] -> [i32]
         range: [   51,   51]   length:   1   unique funcs:    1   type: [i32, i32, i32, i64] -> [i32]
         range: [   52,   52]   length:   1   unique funcs:    1   type: [i32] -> [i32]
         range: [   53,   53]   length:   1   unique funcs:    1   type: [i32, i32] -> []
         range: [   54,   54]   length:   1   unique funcs:    1   type: [i32, i32, i32, i32, i32, i32, i32, i32, i32] -> [i32]
         range: [   55,   55]   length:   1   unique funcs:    1   type: [i32, i32] -> []
         range: [   56,   56]   length:   1   unique funcs:    1   type: [i32, i32] -> [i32]
         range: [   57,   57]   length:   1   unique funcs:    1   type: [i32, i32] -> []
         range: [   58,   58]   length:   1   unique funcs:    1   type: [i32, i32] -> [i32]
         range: [   59,   59]   length:   1   unique funcs:    1   type: [i32, i32] -> []
         range: [   60,   60]   length:   1   unique funcs:    1   type: [i32, i32] -> [i32]
         range: [   61,   61]   length:   1   unique funcs:    1   type: [i32, i32] -> []
         range: [   62,   62]   length:   1   unique funcs:    1   type: [i32, i32] -> [i32]
         range: [   63,   63]   length:   1   unique funcs:    1   type: [i32, i32] -> []
         range: [   64,   64]   length:   1   unique funcs:    1   type: [i32, i32] -> [i32]
         range: [   65,   65]   length:   1   unique funcs:    1   type: [i32, i32, i32, i32] -> [i32]
         range: [   66,   66]   length:   1   unique funcs:    1   type: [i32, i32] -> []
         range: [   67,   67]   length:   1   unique funcs:    1   type: [i32, i32, i32, i32, i32, i32, i32, i32, i32] -> [i32]
         range: [   68,   68]   length:   1   unique funcs:    1   type: [i32, i32] -> []
         range: [   69,   69]   length:   1   unique funcs:    1   type: [i32, i32, i32, i32, i32, i32, i32, i32, i32] -> [i32]
         range: [   70,   70]   length:   1   unique funcs:    1   type: [i32, i32, i32, i32] -> [i32]
         range: [   71,   71]   length:   1   unique funcs:    1   type: [i32, i32, i32, i32, i32] -> [i32]
         range: [   72,   72]   length:   1   unique funcs:    1   type: [i32, i64] -> []
         range: [   73,   73]   length:   1   unique funcs:    1   type: [i32, i32] -> []
         range: [   74,   74]   length:   1   unique funcs:    1   type: [i32, i32, i32, i32, i32] -> [i32]
         range: [   75,   76]   length:   2   unique funcs:    2   type: [i32, i32, i32, i32] -> [i32]
         range: [   77,   77]   length:   1   unique funcs:    1   type: [i32, i32] -> [i32]
         range: [   78,   78]   length:   1   unique funcs:    1   type: [i32, i32] -> []
         range: [   79,   79]   length:   1   unique funcs:    1   type: [i32, i32, i32, i32, i32] -> [i32]
         range: [   80,   80]   length:   1   unique funcs:    1   type: [i32, i32, i32, i32] -> [i32]
         range: [   81,   81]   length:   1   unique funcs:    1   type: [i32, i32] -> []
         range: [   82,   82]   length:   1   unique funcs:    1   type: [i32, i32, i32, i32, i32] -> [i32]
         range: [   83,   83]   length:   1   unique funcs:    1   type: [i32, i32] -> []
         range: [   84,   84]   length:   1   unique funcs:    1   type: [i32, i32, i32, i32] -> [i32]
         range: [   85,   86]   length:   2   unique funcs:    2   type: [i32, i32, i32, i32, i32, i32, i32, i32, i32] -> [i32]
         range: [   87,   87]   length:   1   unique funcs:    1   type: [i32, i32, i32, i32] -> [i32]
         range: [   88,   88]   length:   1   unique funcs:    1   type: [i32, i32] -> []
         range: [   89,   89]   length:   1   unique funcs:    1   type: [i32, i32, i32, i32, i32, i32, i32, i32, i32] -> [i32]
         range: [   90,   95]   length:   6   unique funcs:    6   type: [i32, i32, i32, i32, i32] -> [i32]
         range: [   96,   96]   length:   1   unique funcs:    1   type: [i32] -> [i32]
         range: [   97,   97]   length:   1   unique funcs:    1   type: [i32, i32, i32] -> [i32]
         range: [   98,   98]   length:   1   unique funcs:    1   type: [i32, i64, i32] -> [i64]
         range: [   99,   99]   length:   1   unique funcs:    1   type: [i32] -> [i32]
         range: [  100,  100]   length:   1   unique funcs:    1   type: [i32, i64, i32] -> [i64]
  81 table init ranges in total

Patterns (=preceding instructions) of call_indirect:
     2 × unrestricted                         source: local.(get|tee)   type [i32] -> [i32]
         functions matching by type (regardless whether they are in the table):               24
         functions matching by type and present in table (regardless at which table index):    3
         functions matching by type and present in permissable table index range:              3
     1 × unrestricted                         source: local.(get|tee)   type [i32] -> [i64]
         functions matching by type (regardless whether they are in the table):               10
         functions matching by type and present in table (regardless at which table index):    5
         functions matching by type and present in permissable table index range:              5
    11 × unrestricted                         source:   i32.load   type [i32, i32] -> []
         functions matching by type (regardless whether they are in the table):               34
         functions matching by type and present in table (regardless at which table index):   17
         functions matching by type and present in permissable table index range:             17
    11 × unrestricted                         source: local.(get|tee)   type [i32, i32] -> []
         functions matching by type (regardless whether they are in the table):               34
         functions matching by type and present in table (regardless at which table index):   17
         functions matching by type and present in permissable table index range:             17
     3 × unrestricted                         source:   i32.load   type [i32, i32] -> [i32]
         functions matching by type (regardless whether they are in the table):               39
         functions matching by type and present in table (regardless at which table index):   11
         functions matching by type and present in permissable table index range:             11
     1 × unrestricted                         source: local.(get|tee)   type [i32, i32] -> [i32]
         functions matching by type (regardless whether they are in the table):               39
         functions matching by type and present in table (regardless at which table index):   11
         functions matching by type and present in permissable table index range:             11
     7 × unrestricted                         source:   i32.load   type [i32, i32, i32] -> [i32]
         functions matching by type (regardless whether they are in the table):               36
         functions matching by type and present in table (regardless at which table index):   22
         functions matching by type and present in permissable table index range:             22
     3 × unrestricted                         source: local.(get|tee)   type [i32, i32, i32] -> [i32]
         functions matching by type (regardless whether they are in the table):               36
         functions matching by type and present in table (regardless at which table index):   22
         functions matching by type and present in permissable table index range:             22
     3 × unrestricted                         source:   i32.load   type [i32, i32, i32, i32] -> [i32]
         functions matching by type (regardless whether they are in the table):               23
         functions matching by type and present in table (regardless at which table index):   13
         functions matching by type and present in permissable table index range:             13
     2 × unrestricted                         source: local.(get|tee)   type [i32, i32, i32, i32] -> [i32]
         functions matching by type (regardless whether they are in the table):               23
         functions matching by type and present in table (regardless at which table index):   13
         functions matching by type and present in permissable table index range:             13
     6 × unrestricted                         source:   i32.load   type [i32, i32, i32, i32, i32] -> [i32]
         functions matching by type (regardless whether they are in the table):               15
         functions matching by type and present in table (regardless at which table index):   10
         functions matching by type and present in permissable table index range:             10
     8 × unrestricted                         source:   i32.load   type [i32, i32, i32, i32, i32, i32, i32, i32, i32] -> [i32]
         functions matching by type (regardless whether they are in the table):               10
         functions matching by type and present in table (regardless at which table index):   10
         functions matching by type and present in permissable table index range:             10
     4 × unrestricted                         source: local.(get|tee)   type [i32, i32, i32, i32, i32, i32, i32, i32, i32] -> [i32]
         functions matching by type (regardless whether they are in the table):               10
         functions matching by type and present in table (regardless at which table index):   10
         functions matching by type and present in permissable table index range:             10
     1 × unrestricted                         source:   i32.load   type [i32, i64] -> []
         functions matching by type (regardless whether they are in the table):                1
         functions matching by type and present in table (regardless at which table index):    1
         functions matching by type and present in permissable table index range:              1
     1 × unrestricted                         source:   i32.load   type [i32, i64, i32] -> [i64]
         functions matching by type (regardless whether they are in the table):                2
         functions matching by type and present in table (regardless at which table index):    2
         functions matching by type and present in permissable table index range:              2
     4 × unrestricted                         source: local.(get|tee)   type [i64] -> [i32]
         functions matching by type (regardless whether they are in the table):                3
         functions matching by type and present in table (regardless at which table index):    2
         functions matching by type and present in permissable table index range:              2
     1 × fixed index:      0                  source:  i32.const   type: [i32, i32] -> []
         functions matching by type (regardless whether they are in the table):               34
         functions matching by type and present in table (regardless at which table index):   17
         functions matching by type and present in permissable table index range:              0
     1 × fixed index:      0                  source:  i32.const   type: [i32, f64, i32, i32, i32, i32] -> [i32]
         functions matching by type (regardless whether they are in the table):                0
         functions matching by type and present in table (regardless at which table index):    0
         functions matching by type and present in permissable table index range:              0
     1 × fixed index:     34                  source:  i32.const   type: [i64] -> [i32]
         functions matching by type (regardless whether they are in the table):                3
         functions matching by type and present in table (regardless at which table index):    2
         functions matching by type and present in permissable table index range:              1
  19 call_indirect patterns in total

function #34 is indirectly called with a fixed table index
  block
  block
  local.get 0
  ...

call_indirect target equivalence classes (CFI equivalence classes):
  type: [i32, i32, i32] -> [i32], start idx: None, end idx: None, size (of class): 22, count (how often class appears: 3
  type: [i32, i32, i32, i32, i32, i32, i32, i32, i32] -> [i32], start idx: None, end idx: None, size (of class): 10, count (how often class appears: 4
  type: [i32, i32] -> [], start idx: Some(0), end idx: Some(0), size (of class): 0, count (how often class appears: 1
  type: [i32, f64, i32, i32, i32, i32] -> [i32], start idx: Some(0), end idx: Some(0), size (of class): 0, count (how often class appears: 1
  type: [i64] -> [i32], start idx: None, end idx: None, size (of class): 2, count (how often class appears: 4
  type: [i32, i32] -> [], start idx: None, end idx: None, size (of class): 17, count (how often class appears: 11
  type: [i32, i32, i32, i32] -> [i32], start idx: None, end idx: None, size (of class): 13, count (how often class appears: 3
  type: [i32] -> [i64], start idx: None, end idx: None, size (of class): 5, count (how often class appears: 1
  type: [i32, i32, i32] -> [i32], start idx: None, end idx: None, size (of class): 22, count (how often class appears: 7
  type: [i32, i32] -> [], start idx: None, end idx: None, size (of class): 17, count (how often class appears: 11
  type: [i32] -> [i32], start idx: None, end idx: None, size (of class): 3, count (how often class appears: 2
  type: [i32, i32, i32, i32] -> [i32], start idx: None, end idx: None, size (of class): 13, count (how often class appears: 2
  type: [i32, i32, i32, i32, i32, i32, i32, i32, i32] -> [i32], start idx: None, end idx: None, size (of class): 10, count (how often class appears: 8
  type: [i64] -> [i32], start idx: Some(34), end idx: Some(34), size (of class): 1, count (how often class appears: 1
  type: [i32, i32] -> [i32], start idx: None, end idx: None, size (of class): 11, count (how often class appears: 1
  type: [i32, i64] -> [], start idx: None, end idx: None, size (of class): 1, count (how often class appears: 1
  type: [i32, i32, i32, i32, i32] -> [i32], start idx: None, end idx: None, size (of class): 10, count (how often class appears: 6
  type: [i32, i32] -> [i32], start idx: None, end idx: None, size (of class): 11, count (how often class appears: 3
  type: [i32, i64, i32] -> [i64], start idx: None, end idx: None, size (of class): 2, count (how often class appears: 1

latex CFI table line for this program: 557.xz & C & 53.3\kern.5ptk\kern1pt & 71 & 11.0\% & 250 & 98 & 39.2\% & 86 & 34.4\% & 19 & 1 & 11 & 3.7 & 3 \\
cfi_latex_csv_sum_avg_line:557.xz,53283,577,71,250,98,86,19,1,11,3.736842105263158,3
benchmark,binary,class,size,count,source
cfi_csv_line:"557.xz_r","xz_r.wasm",0,22,3,"local.(get|tee)"
cfi_csv_line:"557.xz_r","xz_r.wasm",1,10,4,"local.(get|tee)"
cfi_csv_line:"557.xz_r","xz_r.wasm",2,0,1,"i32.const"
cfi_csv_line:"557.xz_r","xz_r.wasm",3,0,1,"i32.const"
cfi_csv_line:"557.xz_r","xz_r.wasm",4,2,4,"local.(get|tee)"
cfi_csv_line:"557.xz_r","xz_r.wasm",5,17,11,"i32.load"
cfi_csv_line:"557.xz_r","xz_r.wasm",6,13,3,"i32.load"
cfi_csv_line:"557.xz_r","xz_r.wasm",7,5,1,"local.(get|tee)"
cfi_csv_line:"557.xz_r","xz_r.wasm",8,22,7,"i32.load"
cfi_csv_line:"557.xz_r","xz_r.wasm",9,17,11,"local.(get|tee)"
cfi_csv_line:"557.xz_r","xz_r.wasm",10,3,2,"local.(get|tee)"
cfi_csv_line:"557.xz_r","xz_r.wasm",11,13,2,"local.(get|tee)"
cfi_csv_line:"557.xz_r","xz_r.wasm",12,10,8,"i32.load"
cfi_csv_line:"557.xz_r","xz_r.wasm",13,1,1,"i32.const"
cfi_csv_line:"557.xz_r","xz_r.wasm",14,11,1,"local.(get|tee)"
cfi_csv_line:"557.xz_r","xz_r.wasm",15,1,1,"i32.load"
cfi_csv_line:"557.xz_r","xz_r.wasm",16,10,6,"i32.load"
cfi_csv_line:"557.xz_r","xz_r.wasm",17,11,3,"i32.load"
cfi_csv_line:"557.xz_r","xz_r.wasm",18,2,1,"i32.load"
total classes: 19
