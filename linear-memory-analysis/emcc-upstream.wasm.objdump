
emcc-upstream.wasm:	file format wasm 0x1

Sections:

     Type start=0x0000000a end=0x0000006a (size=0x00000060) count: 15
   Import start=0x0000006d end=0x000000fa (size=0x0000008d) count: 6
 Function start=0x000000fc end=0x00000126 (size=0x0000002a) count: 41
   Global start=0x00000128 end=0x00000137 (size=0x0000000f) count: 2
   Export start=0x0000013a end=0x000001f7 (size=0x000000bd) count: 14
     Elem start=0x000001f9 end=0x00000202 (size=0x00000009) count: 1
     Code start=0x00000205 end=0x00003877 (size=0x00003672) count: 41
     Data start=0x0000387a end=0x00003b24 (size=0x000002aa) count: 21

Section Details:

Type[15]:
 - type[0] (i32) -> i32
 - type[1] (i32, i32, i32) -> i32
 - type[2] (i32) -> nil
 - type[3] (i32, i32, i32) -> nil
 - type[4] (i32, i32) -> i32
 - type[5] (i32, i32) -> nil
 - type[6] () -> i32
 - type[7] (i32, i32, i32, i32) -> i32
 - type[8] (i32, i32, i32, i32, i32) -> i32
 - type[9] (i64, i32) -> i32
 - type[10] (i32, i64, i32) -> i64
 - type[11] () -> nil
 - type[12] (i32, i32, i32, i32, i32) -> nil
 - type[13] (i32, f64, i32, i32, i32, i32) -> i32
 - type[14] (i64, i32, i32) -> i32
Import[6]:
 - func[0] sig=7 <wasi_snapshot_preview1.fd_write> <- wasi_snapshot_preview1.fd_write
 - func[1] sig=0 <env.emscripten_resize_heap> <- env.emscripten_resize_heap
 - func[2] sig=1 <env.emscripten_memcpy_big> <- env.emscripten_memcpy_big
 - func[3] sig=2 <env.setTempRet0> <- env.setTempRet0
 - memory[0] pages: initial=256 max=256 <- env.memory
 - table[0] elem_type=funcref init=4 max=0 <- env.table
Function[41]:
 - func[4] sig=11 <__wasm_call_ctors>
 - func[5] sig=3
 - func[6] sig=2
 - func[7] sig=4 <main>
 - func[8] sig=5
 - func[9] sig=6 <__errno_location>
 - func[10] sig=0
 - func[11] sig=4
 - func[12] sig=4
 - func[13] sig=4
 - func[14] sig=1
 - func[15] sig=1
 - func[16] sig=3
 - func[17] sig=8
 - func[18] sig=3
 - func[19] sig=0
 - func[20] sig=3
 - func[21] sig=12
 - func[22] sig=9
 - func[23] sig=14
 - func[24] sig=9
 - func[25] sig=0
 - func[26] sig=2
 - func[27] sig=0
 - func[28] sig=0
 - func[29] sig=10
 - func[30] sig=1
 - func[31] sig=2
 - func[32] sig=0 <malloc>
 - func[33] sig=2 <free>
 - func[34] sig=0
 - func[35] sig=3
 - func[36] sig=3
 - func[37] sig=5 <setThrew>
 - func[38] sig=6 <stackSave>
 - func[39] sig=0 <stackAlloc>
 - func[40] sig=2 <stackRestore>
 - func[41] sig=0 <__growWasmMemory>
 - func[42] sig=4 <dynCall_ii>
 - func[43] sig=7 <dynCall_iiii>
 - func[44] sig=8 <dynCall_jiji>
Global[2]:
 - global[0] i32 mutable=1 - init i32=5246688
 - global[1] i32 mutable=0 <__data_end> - init i32=3808
Export[14]:
 - func[4] <__wasm_call_ctors> -> "__wasm_call_ctors"
 - func[32] <malloc> -> "malloc"
 - func[7] <main> -> "main"
 - func[9] <__errno_location> -> "__errno_location"
 - func[37] <setThrew> -> "setThrew"
 - func[33] <free> -> "free"
 - global[1] -> "__data_end"
 - func[38] <stackSave> -> "stackSave"
 - func[39] <stackAlloc> -> "stackAlloc"
 - func[40] <stackRestore> -> "stackRestore"
 - func[41] <__growWasmMemory> -> "__growWasmMemory"
 - func[42] <dynCall_ii> -> "dynCall_ii"
 - func[43] <dynCall_iiii> -> "dynCall_iiii"
 - func[44] <dynCall_jiji> -> "dynCall_jiji"
Elem[1]:
 - segment[0] table=0 count=3 - init i32=1
  - elem[1] = func[28]
  - elem[2] = func[30]
  - elem[3] = func[29]
Code[41]:
 - func[4] size=3 <__wasm_call_ctors>
 - func[5] size=218
 - func[6] size=137
 - func[7] size=16 <main>
 - func[8] size=39
 - func[9] size=5 <__errno_location>
 - func[10] size=10
 - func[11] size=273
 - func[12] size=17
 - func[13] size=222
 - func[14] size=181
 - func[15] size=53
 - func[16] size=331
 - func[17] size=2218
 - func[18] size=23
 - func[19] size=66
 - func[20] size=326
 - func[21] size=119
 - func[22] size=45
 - func[23] size=52
 - func[24] size=131
 - func[25] size=89
 - func[26] size=106
 - func[27] size=143
 - func[28] size=4
 - func[29] size=4
 - func[30] size=326
 - func[31] size=126
 - func[32] size=5857 <malloc>
 - func[33] size=1665 <free>
 - func[34] size=80
 - func[35] size=511
 - func[36] size=369
 - func[37] size=28 <setThrew>
 - func[38] size=4 <stackSave>
 - func[39] size=16 <stackAlloc>
 - func[40] size=6 <stackRestore>
 - func[41] size=6 <__growWasmMemory>
 - func[42] size=9 <dynCall_ii>
 - func[43] size=13 <dynCall_iiii>
 - func[44] size=34 <dynCall_jiji>
Data[21]:
 - segment[0] size=278 - init i32=1024
  - 0000400: 676c 6f62 616c 2063 6f6e 7374 2073 7472  global const str
  - 0000410: 696e 6700 2020 2020 2573 2c20 6164 6472  ing.    %s, addr
  - 0000420: 3a20 2570 2028 256c 7529 0a00 2020 2020  : %p (%lu)..    
  - 0000430: 7374 6163 6b20 7661 6c75 6520 696e 206c  stack value in l
  - 0000440: 6561 6628 2920 6675 6e63 7469 6f6e 2c20  eaf() function, 
  - 0000450: 6164 6472 3a20 2570 2028 256c 7529 0a00  addr: %p (%lu)..
  - 0000460: 2020 2020 7374 6163 6b20 6772 6f77 733a      stack grows:
  - 0000470: 2025 6c64 0a00 2020 2020 6172 6776 5b30   %ld..    argv[0
  - 0000480: 5d3a 2025 732c 2061 6464 723a 2025 7020  ]: %s, addr: %p 
  - 0000490: 2825 6c75 290a 0073 7461 636b 2d61 6c6c  (%lu)..stack-all
  - 00004a0: 6f63 6174 6564 2028 6c6f 6361 6c29 2073  ocated (local) s
  - 00004b0: 7472 696e 6700 6479 6e61 6d69 6361 6c6c  tring.dynamicall
  - 00004c0: 7920 2868 6561 7029 2061 6c6c 6f63 6174  y (heap) allocat
  - 00004d0: 6564 2073 7472 696e 6700 2020 696e 206c  ed string.  in l
  - 00004e0: 6561 6628 2900 2020 696e 2069 6e74 6572  eaf().  in inter
  - 00004f0: 6d65 6469 6174 6528 2900 2020 696e 206d  mediate().  in m
  - 0000500: 6169 6e28 2900 2d2b 2020 2030 5830 7800  ain().-+   0X0x.
  - 0000510: 286e 756c 6c29                           (null)
 - segment[1] size=65 - init i32=1312
  - 0000520: 1100 0a00 1111 1100 0000 0005 0000 0000  ................
  - 0000530: 0000 0900 0000 000b 0000 0000 0000 0000  ................
  - 0000540: 1100 0f0a 1111 1103 0a07 0001 1309 0b0b  ................
  - 0000550: 0000 0906 0b00 000b 0006 1100 0000 1111  ................
  - 0000560: 11                                       .
 - segment[2] size=33 - init i32=1393
  - 0000571: 0b00 0000 0000 0000 0011 000a 0a11 1111  ................
  - 0000581: 000a 0000 0200 090b 0000 0009 000b 0000  ................
  - 0000591: 0b                                       .
 - segment[3] size=1 - init i32=1451
  - 00005ab: 0c                                       .
 - segment[4] size=21 - init i32=1463
  - 00005b7: 0c00 0000 000c 0000 0000 090c 0000 0000  ................
  - 00005c7: 000c 0000 0c                             .....
 - segment[5] size=1 - init i32=1509
  - 00005e5: 0e                                       .
 - segment[6] size=21 - init i32=1521
  - 00005f1: 0d00 0000 040d 0000 0000 090e 0000 0000  ................
  - 0000601: 000e 0000 0e                             .....
 - segment[7] size=1 - init i32=1567
  - 000061f: 10                                       .
 - segment[8] size=30 - init i32=1579
  - 000062b: 0f00 0000 000f 0000 0000 0910 0000 0000  ................
  - 000063b: 0010 0000 1000 0012 0000 0012 1212       ..............
 - segment[9] size=14 - init i32=1634
  - 0000662: 1200 0000 1212 1200 0000 0000 0009       ..............
 - segment[10] size=1 - init i32=1683
  - 0000693: 0b                                       .
 - segment[11] size=21 - init i32=1695
  - 000069f: 0a00 0000 000a 0000 0000 090b 0000 0000  ................
  - 00006af: 000b 0000 0b                             .....
 - segment[12] size=1 - init i32=1741
  - 00006cd: 0c                                       .
 - segment[13] size=41 - init i32=1753
  - 00006d9: 0c00 0000 000c 0000 0000 090c 0000 0000  ................
  - 00006e9: 000c 0000 0c00 0030 3132 3334 3536 3738  .......012345678
  - 00006f9: 3941 4243 4445 46f8 07                   9ABCDEF..
 - segment[14] size=1 - init i32=1801
  - 0000709: 04                                       .
 - segment[15] size=2 - init i32=1980
  - 00007bc: bc08                                     ..
 - segment[16] size=1 - init i32=2040
  - 00007f8: 05                                       .
 - segment[17] size=1 - init i32=2052
  - 0000804: 01                                       .
 - segment[18] size=14 - init i32=2076
  - 000081c: 0200 0000 0300 0000 e808 0000 0004       ..............
 - segment[19] size=1 - init i32=2100
  - 0000834: 01                                       .
 - segment[20] size=5 - init i32=2115
  - 0000843: 0aff ffff ff                             .....
